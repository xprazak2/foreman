import * as React from 'react';
import TestBackendImpl, { getInstance, } from 'react-dnd-test-backend';
import { DndProvider } from 'react-dnd';
import { act } from 'react-dom/test-utils';
/**
 * Wrap a DnD component or test case in a DragDropContext
 *
 * @param DecoratedComponent The component to decorate
 */
export function wrapInTestContext(DecoratedComponent) {
    const result = (props) => (React.createElement(DndProvider, { backend: TestBackendImpl },
        React.createElement(DecoratedComponent, Object.assign({}, props))));
    result.displayName = 'TestContextWrapper';
    return result;
}
/**
 * Extracts a Backend instance from a TestContext component, such as
 * one emitted from `wrapinTestContext`
 *
 * @param instance The instance to extract the backend fram
 * @deprecated - This is no longer useful since ContextComponent was removed. This will be removed in a major version cut.
 */
export function getBackendFromInstance(instance) {
    return getInstance();
}
export function simulateDragDropSequence(source, target, backend) {
    act(() => {
        backend.simulateBeginDrag([source.getHandlerId()]);
        backend.simulateHover([target.getHandlerId()]);
        backend.simulateDrop();
        backend.simulateEndDrag();
    });
}
export function simulateHoverSequence(source, target, backend) {
    act(() => {
        backend.simulateBeginDrag([source.getHandlerId()]);
        backend.simulateHover([target.getHandlerId()]);
        backend.simulateEndDrag();
    });
}
